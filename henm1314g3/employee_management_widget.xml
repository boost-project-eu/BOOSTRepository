<?xml version="1.0" encoding="UTF-8" ?>
<Module>

    <ModulePrefs title="Personnel"
		description="Manage your employees and assign learning goals to them."
		author="Team Boost"
		author_email="henm1314g3@dbis.rwth-aachen.de"
		width="300"
		height="450">
  	<Require feature="opensocial-0.8" />
    <Require feature="openapp" />
    <OAuth>
		<Service name="openapp"
		    xmlns:openapp="http://www.role-project.eu/xml/openapp/opensocialext/"
		    openapp:service="http://purl.org/role/terms/spaceService"
		    openapp:permitReadAppend="http://purl.org/role/terms/data">

		    <Request method="" url=""/>
			<Authorization url=""/>
			<Access method="" url=""/>
		</Service>
    </OAuth>
    </ModulePrefs>

    <Content type="html">
    <![CDATA[

		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/require.js"></script>

		<!-- Define CSS -->
		<link rel="stylesheet" href="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/css/bootstrap.min.css">
		<link rel="stylesheet" href="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/css/slider.css">
		<link rel="stylesheet" href="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/ladda/ladda-themeless.min.css">
		<link href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet">

		<!-- JavaScript Block -->
		<script>

			require( ['http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/config.js'], function (config){
			require( [
				"i18n!http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/nls/employee.js",
				"async",
				"ractive",
				"ladda",
			    "bootbox",
			    "jquery",
			    "bootstrap",
			    "bootstrapSlider",
			    "boostShared",
			    "EmployeeManager",
			    "spin",
			    "BCNManager",
			    "AccessRightsManager",
			    "iwc",
			    "UserManager",
			    "bootstrapDatepicker",
			    "moment",
			    "utils"
			    ], function(tr, a, Ractive, Ladda, b) {
			    	translations = tr;
					async = a;
					bootbox = b;
					var space;
					var employeeList;
					var bcnList;
					var iwcClient;
					var userAccessRights;
					var currentUser;

					//Define the ractives as globals
					var ractiveOverview;
					var ractiveEditEmployee;
					var ractiveAddEmployee;
					var ractiveDeleteEmployee;
					var ractiveSetLIEmployee;


					if (openapp.param.user()) {
						closeAutorisationWindow();
					}

		//			gadgets.util.registerOnLoadHandler(init);

		//			function init(){
						space = new openapp.oo.Resource(openapp.param.space());
						iwcClient = new iwc.Client();
						iwcClient.connect(iwcCallback);
		//			}

					function iwcCallback(intent){
						if((intent.action == "BCN_CREATE") || (intent.action == "BCN_UPDATE")){
							$('#setLIModal').modal("hide");

							var message = "<div>" + translations.STR_PLEASE_WAIT_WHILE_THE_EMPLOYEES + "</div>"
							message = message + "<div><center><img style='margin-left:5px;' id='loader' src='http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/loader.gif'></center></div>";
							bootbox.dialog({
								title : "<span style='margin-right:5px;' class='glyphicon glyphicon-refresh'></span>Goals have changed.",
								message : message,
								closeButton : false
							});
							createBCNfromUri(intent.data, function(bcn){
								if(intent.action == "BCN_CREATE"){
									//Add the new BCN to the local list
									bcnList.push(bcn);
								}
								else{
									//Replace the BCN in the local list with the updated one
									for(var i = 0; i < bcnList.length; i++){
										if(bcn.uri == bcnList[i].uri)
											bcnList[i] = bcn;
									}
									ractiveOverview.update();
								}
								sortBcns(bcnList);

								//Update all local employee objects
								for(var i = 0; i < employeeList.length; i++){
									ensureEmplyoeeBCNConsistency(employeeList[i], [bcn], []);
								}
								bootbox.hideAll();
							});
						}

						if(intent.action == "BCN_DELETE"){
							$('#setLIModal').modal("hide");
							var message = "<div>Please wait while the employees are updated to reflect these changes.</div>"
							message = message + "<div><center><img style='margin-left:5px;' id='loader' src='http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/loader.gif'></center></div>";
							bootbox.dialog({
								title : "<span style='margin-right:5px;' class='glyphicon glyphicon-refresh'></span>Goals have changed.",
								message : message,
								closeButton : false
							});

							//Find the deleted BCN in the list via its URI and remove it
							var bcnToRemove = null;
							for(var i = 0; i < bcnList.length; i++){
								if(bcnList[i].uri == intent.data){
									bcnToRemove = bcnList[i];
									bcnList.splice(i, 1);
								}
							}

							//Remove BCN data from the employees
							for(var i = 0; i < employeeList.length; i++){
								ensureEmplyoeeBCNConsistency(employeeList[i], [], [bcnToRemove]);
							}

							bootbox.hideAll();
						}

						if(intent.action=="ACCESS_RIGHTS_CHANGED"){
							retrieveAccessRights(function(accessRights){

							userAccessRights = accessRights.getUserAccessRights();

								retrieveAllEmployees(space, function(employees){
									employeeList = filterEmployees(employees, accessRights);

									sortEmployees();

									ractiveOverview.set("employeeList", employeeList);
								});

							});
						}
					}

					function publishEmployeeCreated(employeeUri){
						var intent = {
							component: "",
							data: employeeUri,
							dataType: "text/json",
							flags :["PUBLISH_GLOBAL"],
							action: "EMPLOYEE_CREATE"
						};

						iwcClient.publish(intent);
					}

					function publishEmployeeUpdated(employeeUri){
						var intent = {
							component: "",
							data: employeeUri,
							dataType: "text/json",
							flags :["PUBLISH_GLOBAL"],
							action: "EMPLOYEE_UPDATE"
						};

						iwcClient.publish(intent);
					}

					function publishEmployeeDeleted(employeeUri){
						var intent = {
							component: "",
							data: employeeUri,
							dataType: "text/json",
							flags :["PUBLISH_GLOBAL"],
							action: "EMPLOYEE_DELETE"
						};

						iwcClient.publish(intent);
					}

					function publishShowEmployeeProgress(uri){
						var intent = {
							component: "",
							data: uri,
							dataType: "text/json",
							action: "SHOW_EMPLOYEE_PROGRESS"
						};

						iwcClient.publish(intent);
					}

					function publishShowOverallEmployeeProgress(){
						var intent = {
							component: "",
							data: "",
							dataType: "text/json",
							action: "SHOW_OVERALL_EMPLOYEE_PROGRESS"
						};

						iwcClient.publish(intent);
					}

					function publishShowEmployeeDates(employeeUri){
						var intent = {
							component: "",
							data: employeeUri,
							dataType: "text/json",
							action: "SHOW_EMPLOYEE_DATES"
						};

						iwcClient.publish(intent);
					}

					$(function(){

						// Get the access rights:
						retrieveAccessRights(function(accessRights){
						userAccessRights = accessRights.getUserAccessRights();

							//Check if user has agreed to license

							if(!userAccessRights.hasAgreedToLicense){
								showModalAcceptTermsOfUse();
							} 
						});  // end of the retrieveAccessRights


						var message = "<div>Please wait.</div>"
						message = message + "<div><center><img style='margin-left:5px;' id='loader' src='http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/loader.gif'></center></div>";

						// Get the access rights:
						retrieveAccessRights(function(accessRights){

							userAccessRights = accessRights.getUserAccessRights();

							// show help according to user rights
							var ractiveHelp = new Ractive({
								el: 'descriptionModal',
								template: '#templateHelpModal',
								data: {
									accessRights: userAccessRights,
									text: translations
								},
								append: true
							});

							//	addEmployee and showProgress activities
							var ractiveEmployeeHeader = new Ractive({
							  el: 'containerEmployeeOverview',
							  template: '#templateEmployeeHeader',
							  data: {
							  	accessRights: userAccessRights,
							  	text: translations
							  },
							  append: true
							});

						retrieveAllEmployees(space, function(employees){
							employeeList = filterEmployees(employees, accessRights);

							sortEmployees();
							retrieveAllBcns(space, function(bcns){
								bcnList = bcns;
								sortBcns(bcnList);

								ractiveEmployeeHeader.on({
								showOverallProgress: function ( event ) {
									publishShowOverallEmployeeProgress();
								},

								showHelpAddEmployee: function( event ){
									$('.tooltip-addEmployee').tooltip();

								},
								showHelpShowOverallProgress: function (event){
									$('.tooltip-showOverallProgress').tooltip();
								},
								showHelpForHelp: function (event){
									$('.tooltip-showHelp').tooltip();
								},
								showHelp: function(event){
									$('#descriptionModal').modal({
										keyboard: true
									});

								}
								});

								// Overview ractive which is responsible to render the overview list of all employees
								ractiveOverview = new Ractive({
								    el: 'containerEmployeeOverview',
								    template: '#templateEmployeeOverview',
								    data: { "employeeList" : employeeList,
								    		"accessRights" : userAccessRights,
								    		text: translations
								 			},
								    append: true
								});

								ractiveOverview.on({
									edit: function ( event ) {
									//We are editing a cloned employee object
									//If the user discards the changes we do not have to do anything.
									//If the user saves the changes we just replace the original employee with the clone
									ractiveEditEmployee.set("employee", event.context.clone());
									ractiveEditEmployee.set("originalEmployee", event.context);
									ractiveEditEmployee.set("nameError", false);
									ractiveEditEmployee.set("emailError", false);
									$('#updateEmployeeModal').modal();
								},
									delete: function ( event ) {
									ractiveDeleteEmployee.set("employee", event.context);
									$('#deleteEmployeeModal').modal();
								},
									graphShow: function(event){
									publishShowEmployeeProgress(event.context.uri);
								},
									employeeDatesShow: function(event){
									publishShowEmployeeDates(event.context.userUri);
								},
									setLI: function ( event ) {
									//We are editing a cloned employee object
									//If the user discards the changes we do not have to do anything.
									//If the user saves the changes we just replace the original employee with the clone

									var clone = event.context.clone();
									bindEmployeeToBCNs(clone);
									ractiveSetLIEmployee.set("bcnList", bcnList);
									ractiveSetLIEmployee.set("employee", clone);
									ractiveSetLIEmployee.set("originalEmployee", event.context);
									$('.input-group.date').datepicker({
									    keyboardNavigation: false
									});

									$('#setLIModal').modal();
								},
									showHelpEmployeeGraph: function ( event ) {
									$('.tooltip-showEmployeeProgress').tooltip();
								},
									showHelpEditEmployee: function ( event ) {
									$('.tooltip-editEmployee').tooltip();
								},
									showHelpSetLI: function ( event ) {
									$('.tooltip-setLI').tooltip();
								},
									showHelpEmployeeDates: function ( event ) {
									$('.tooltip-showDeadlines').tooltip();
								},
									showHelpDeleteEmployee: function ( event ) {
									$('.tooltip-deleteEmployee').tooltip();
								},
									showHelpEmailEmployee: function ( event ) {
									$('.tooltip-emailEmployee').tooltip();
								},
									showHelpOptions: function ( event ) {
									$('.tooltip-showOptions').tooltip();
								}
								});

								//Edit employee ractive which is responsible to render the modal to edit an employee
								ractiveEditEmployee = new Ractive({
									el: 'containerEmployeeEdit',
								    template: '#employeeTemplate',
								    data: { "employee" : null,
								    		"originalEmployee" : null,
								    		"nameError" : false,
								    		"emailError" : false,
								    		text: translations
								    	  },
								    append: true
								});

								ractiveEditEmployee.on("saveEmployee", function (event) {

									var employee = this.get("employee");
									if(!checkInputEmployee(employee, this))
										return;
									var originalEmployee = this.get("originalEmployee");
									var buttonElement = event.node;
									//Show the loading indicator of the save button
									var l = Ladda.create(buttonElement);
									l.start();
									employee.update(function(){
										publishEmployeeUpdated(employee.uri);
										//Replace the old employee in the array with the modified one
										employeeList[employeeList.indexOf(originalEmployee)] = employee;

										//Tell the overview ractive that the employee was updated
										ractiveOverview.update();

										sortEmployees();

										//Hide the loading indicator of the save button
										l.stop();
										$("#updateEmployeeModal").modal("hide");
									});

								});


								//Delete employee ractive which is responsible to render the modal used to delete an employee
								ractiveDeleteEmployee = new Ractive({
									el: 'containerEmployeeDelete',
								    template: '#deleteEmployeeTemplate',
								  	data: {
								  		employee : null,
								  		text: translations
								  	},
								    append: true
								});

								ractiveDeleteEmployee.on("deleteEmployee", function(event){
									var employee = this.get("employee");
									var buttonElement = event.node;
									//Show the loading indicator of the delete button
									var l = Ladda.create(buttonElement);
									l.start();
									employee.delete(function(){
										employeeList.splice(employeeList.indexOf(employee), 1);
										//TODO: Sort the array by employee name

										publishEmployeeDeleted(employee.uri);
										//Hide the loading indicator of the delete button
										l.stop();
										$("#deleteEmployeeModal").modal("hide");
									});
								});

								//Ractive which is responsible to render the modal where the user can set the learning levels
								//for an employee
								ractiveSetLIEmployee = new Ractive({
									el: 'containerEmployeeSetLI',
								    template: '#setLITemplate',
								    data: 	{ 	"bcnList" : null,
												"learningLevels" : llevel,
												"employee" : null,
												"originalEmployee" : null,
												text: translations
										 	},

								    append: true
								});

								ractiveSetLIEmployee.on("saveSetLI", function(event){

									var employee = this.get("employee");
									var originalEmployee = this.get("originalEmployee");
									var buttonElement = event.node;
									//Show the loading indicator of the save button
									var l = Ladda.create(buttonElement);
									l.start();
									employee.update(function(){
										publishEmployeeUpdated(employee.uri);

										//Replace the old employee in the array with the modified one
										employeeList[employeeList.indexOf(originalEmployee)] = employee;

										//Tell the overview ractive that the employee was updated
										ractiveOverview.update();

										//Hide the loading indicator of the save button
										l.stop();
										$('#setLIModal').modal("hide");
									});
								});

								//dates events

								//obsolete, need to be deleted after confirmation
								ractiveSetLIEmployee.on("changeStartDatePicker",  function(event){
									$('.input-group.date').datepicker({
									    keyboardNavigation: false,
									}).off().on("changeDate", function(e){
										var formatDate = moment(e.date);
										event.context.employeeBcnData.startDate = formatDate.format("MM/DD/YYYY");
									});
								});

								//obsolete
								ractiveSetLIEmployee.on("changeEndDatePicker",  function(event){
									$('.input-group.date').datepicker({
									    keyboardNavigation: false,
									}).off().on("changeDate", function(e){
										var formatDate = moment(e.date);
										event.context.employeeBcnData.endDate = formatDate.format("MM/DD/YYYY");
									});
								});

								ractiveSetLIEmployee.on("changeLiStartDatePicker",  function(event){
									$('.input-group.date').datepicker({
									    keyboardNavigation: false,
									}).off().on("changeDate", function(e){
										var formatDate = moment(e.date);
										event.context.employeeLiData.startDate = formatDate.format("MM/DD/YYYY");
									});
								});

								ractiveSetLIEmployee.on("changeLiEndDatePicker",  function(event){
									$('.input-group.date').datepicker({
									    keyboardNavigation: false,
									}).off().on("changeDate", function(e){
										var formatDate = moment(e.date);
										event.context.employeeLiData.endDate = formatDate.format("MM/DD/YYYY");
									});
								});

								$("#loadingEmployeeText").addClass("hidden");
							});
						});
					});  // end of the retrieveAccessRights

					});

					function bindEmployeeToBCNs(employee){
						for(var i=0; i < bcnList.length; i++){
							var bcn = bcnList[i];
							bcn.employeeBcnData = employee.learningLevels[bcn.uri];
							for(var j = 0; j < bcn.learningIndicators.length; j++){
								var li = bcn.learningIndicators[j];
								li.employeeLiData = employee.learningLevels[bcn.uri][li.id];
							}
						}
					}

					function sortEmployees(){
						employeeList.sort(function (a, b){
							if(a.name.toLowerCase() < b.name.toLowerCase())
								return -1; else return 1;
						});
					}

					function checkInputEmployee(employee, ractive)
					{
						var nameError = (employee.name == "");
						ractive.set("nameError", nameError);

						var emailError = false;
						var email = employee.email;

						var atpos = email.indexOf("@");
						var dotpos = email.lastIndexOf(".");

						if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= email.length)
		  				{
		  					emailError = true;
		  				}

		  				ractive.set("emailError", emailError);

		  				return !(nameError || emailError);
					}

					function filterEmployees(employees, accessRights){
						var employeeList = [];
						var userAccessRights = accessRights.getUserAccessRights();

						if(userAccessRights.isEmployee){
							for(var i = 0; i < employees.length; i++){
								var employee = employees[i];
								// retrieving current user
								if(openapp.param.user() == employee.userUri)
									employeeList.push(employee)
							}
						}
						else if(userAccessRights.isManager){
							employeeList = filterEmployeesBasedOnAccessRights(employees, accessRights);
						}
						return employeeList;
					}
				});
			});

		</script>

		<!-- HTML Block -->

		<div style="overflow-y: scroll; height:450px;">
		<div class="panel panel-primary" id="containerEmployeeOverview">
		<!-- Template for the header Main widget view -->
			<script id='templateEmployeeHeader' type='text/ractive'>

			<div class="panel-heading">
				     <button type="button" class="btn btn-default launch-modal" on-mouseover="showHelpForHelp" on-click="showHelp" style="float:right; margin:-5 5 10 5px; color:#428BCA;"><span  class="glyphicon glyphicon-question-sign tooltip-showHelp" data-placement="left" data-toggle="tooltip" data-original-title="Show Help"></span></button>
					<h3 class="panel-title">
					<span class="glyphicon glyphicon-user" style="margin-right:5px;"></span>{{{text.STR_BUSINESS_EMPLOYEES}}}
				</h3>
		  	</div>

			<div id='panel' class="panel-body" style="padding: 5 5 5 5;">
			<!-- add new bcn and view overall progress -->
	  		 	{{^accessRights.isEmployee}}
					{{#accessRights.isManager}}
		  				<div class="btn-group">
			 	 			<button  type="button" class="btn btn-primary pull-right" on-mouseover="showHelpShowOverallProgress" on-click="showOverallProgress"><span class="glyphicon glyphicon-stats tooltip-showOverallProgress" data-placement="top" data-toggle="tooltip" data-original-title="{{text.STR_OVERALL_EMPLOYEE_VIEW}}"></span></button>
						</div>
					{{/accessRights.isManager}}
					{{^accessRights.isManager}}
						<div class="alert alert-danger" role="alert">You have <strong>NO</strong> roles now. Please, contact Manager to assign roles for you</div>
					{{/accessRights.isManager}}
	  		 	{{/accessRights.isEmployee}}

				<div id="loadingEmployeeText" class="text-muted small" style="margin-top:5px;">
					{{{text.STR_LOADING_EMPLOYEE_DATA}}}
					<img style='margin-left:5px; height:15px;' src='http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/loader.gif'>
				</div>
			</div>
			</script>
		</div>
		</div>

		<script id="templateEmployeeOverview" type='text/ractive'>
			<table class="table table-striped table-bordered table-condensed" >
			    <tbody>
					{{#employeeList}}
						<tr>
							<td on-click='graphAndDatesShow' style="cursor: pointer;">
								<div>
									{{name}}
								</div>
								<div class="small text-muted">
									{{email}}
								</div>
							</td>
							<td style="width:70px;" align="center">

	  		 			{{^accessRights.isEmployee}}
							{{#accessRights.isManager}}
								<div class='btn-group'>
									<button type="button" class="btn btn-default dropdown-toggle"  on-mouseover="showHelpOptions"  data-toggle="dropdown">
										<i class="fa fa-cogs tooltip-showOptions" data-placement="left" data-toggle="tooltip" data-original-title="Show Options"></i><span class="caret"></span>
									</button>
									<ul class="dropdown-menu pull-right" role="menu" align="left">
										<li style="width:200px;" align="center">
											<div class="btn-group">
												<button class="btn btn-default btn-sm"  on-mouseover="showHelpSetLI" on-click='setLI'><span class='glyphicon glyphicon-flag tooltip-setLI' data-placement="left" data-toggle="tooltip" data-original-title="{{text.STR_ASSIGN_GOALS}} {{name}}" style="margin-right:5px;"></span></button>
												<button class="btn btn-default btn-sm"  on-mouseover="showHelpEmailEmployee"><a href='mailto:{{email}}'><span class='glyphicon glyphicon-envelope tooltip-emailEmployee' data-placement="left" data-toggle="tooltip" data-original-title="{{text.STR_SEND_EMAIL}} {{name}}" style="margin-right:5px; color:#000;"></span></a></button>
												<button class="btn btn-default btn-sm" on-mouseover="showHelpEmployeeGraph" on-click='graphShow'><span class='glyphicon glyphicon-stats tooltip-showEmployeeProgress' data-placement="left" data-toggle="tooltip" data-original-title="Show Progress: {{name}}" style="margin-right:5px;"></span></button>
												<button class="btn btn-default btn-sm" on-mouseover="showHelpEmployeeDates" on-click='employeeDatesShow'><span class='glyphicon glyphicon-calendar tooltip-showDeadlines' data-placement="left" data-toggle="tooltip" data-original-title="{{text.STR_SHOW_DEADLINES}} {{name}}" style="margin-right:5px;"></span></button>
											</div>
										</li>
									</ul>
								</div>
							{{/accessRights.isManager}}
	  		 			{{/accessRights.isEmployee}}

						{{#accessRights.isEmployee}}
							<button class="btn btn-default btn-lg" on-mouseover="showHelpEmployeeGraph" on-click='graphShow'><span class='glyphicon glyphicon-stats tooltip-showEmployeeProgress' data-placement="left" data-toggle="tooltip" data-original-title="Show Progress: {{name}}" style="margin-right:5px;"></span></button>
						{{/accessRights.isEmployee}}

							</td>
						</tr>
					{{/employeeList}}
			    </tbody>
			</table>
		</script>

		<script id="employeeTemplate" type="text/ractive">
			<div class="modal-body">
				<form role="form">
					<div class="form-group {{ nameError ? "has-error" : "" }}">
						<label for="inputNewEmployeeName" class="control-label">Name</label>
						<input value='{{employee.name}}' type="text" class="form-control" id="inputNewEmployeeName" placeholder="Enter name">
						{{#nameError}}
						<span class="help-block"><h6>{{{text.STR_NAME_MUST_NOT_BE_EMPTY}}}</h6></span>
						{{/nameError}}
					</div>
					<div class="form-group {{ emailError ? "has-error" : "" }}">
						<label for="inputNewEmployeeEmail" class="control-label">{{{text.STR_EMAIL}}}</label>
						<input value='{{employee.email}}' type="text" class="form-control" id="inputNewEmployeeEmail" placeholder="{{text.STR_ENTER_EMAIL}}">
						{{#emailError}}
						<span class="help-block"><h6>{{{text.STR_PLEASE_ENTER_A_VALID_EMAIL_ADRESS}}}</h6></span>
						{{/emailError}}
					</div>
				</form>
			</div>

			<div class="modal-footer">
	        	<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
	        	<button class="btn btn-primary ladda-button" data-style="zoom-out" on-click="saveEmployee"><span class="ladda-label">Save</span></button>
			</div>
  		</script>

		

<script id="setLITemplate" type="text/ractive">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
		<h4  class="modal-title" id='massageEmployeeSetLI'>{{employee.name}}</h4>
	</div>
	<div class="modal-body">
	<div class="panel-group" id="bcnPanel">
	{{#bcnList:num}}
		<div class="panel panel-default">
			<div class="panel-heading" style="padding-bottom:1px;">
      			<h6 class="panel-title">
        			<span class="glyphicon {{employeeBcnData.isRelevant ? "glyphicon-star" : "glyphicon-star-empty"}}" style="margin-right:5px;"></span>
        			<a data-toggle="collapse" data-parent="#bcnPanel" href="#bcn{{num}}"> {{name}}
        				<span class="caret"></span>
        			</a>
      			</h6>
      			<div class="checkbox" style="margin-bottom:1px; margin-top:1px;">
					<label>
					 	{{{text.STR_RELEVANT}}}
				 	<input type="checkbox" value="" checked='{{employeeBcnData.isRelevant}}'>
					</label>
				</div>

    		</div>
    		<div  id="bcn{{num}}" class="panel-collapse collapse">
      			<ul style="margin-bottom:0px;" class="list-group">
	      			{{#learningIndicators}}
						<li class="list-group-item">

							<h4><i class="fa {{employeeLiData.isRelevant ? "fa-flag" : "fa-flag-o"}}" style="margin-right:5px;"></i> {{name}}</h4>
							<div class="checkbox">
	  							<label class="{{employeeBcnData.isRelevant ? "" : "text-muted"}}">
	  								{{{text.STR_RELEVANT}}}
	    							<input type="checkbox" value="" checked="{{employeeLiData.isRelevant}}" disabled={{!employeeBcnData.isRelevant}}>
	  					        </label>
					        </div>
					        <div class="form-group">
					        	<label>{{{text.STR_START_DATE}}}</label>
					        	<div class="input-group date">
					        	  <input data-date-format="mm/dd/yyyy" disabled={{employeeLiData.isRelevant ? "" : "disabled"}} value='{{employeeLiData.startDate}}' type="text" on-click="changeLiStartDatePicker" class="form-control" style="border-radius: 4px;"><span style="padding: 0px;" class="input-group-addon">
					        	</div>
					        </div>
					        <div class="form-group">
					        	<label>{{{text.STR_END_DATE}}}</label>
					        	<div class="input-group date">
					        	  <input data-date-format="mm/dd/yyyy" disabled={{employeeLiData.isRelevant ? "" : "disabled"}} value='{{employeeLiData.endDate}}' type="text" on-click="changeLiEndDatePicker" class="form-control" style="border-radius: 4px;"><span style="padding: 0px;" class="input-group-addon">
					        	</div>
					        </div>
							{{{text.STR_START_LEVEL}}}
							<select class="form-control" disabled={{employeeLiData.isRelevant ? "" : "disabled"}} value="{{employeeLiData.start}}">
							{{#learningLevels}}
								<option value='{{.}}'>{{.}}</option>
							{{/learningLevels}}
							</select>
							{{{text.STR_CURRENT_LEVEL}}}
							<select class="form-control" disabled={{employeeLiData.isRelevant ? "" : "disabled"}} value="{{employeeLiData.current}}">
							{{#learningLevels}}
								<option value='{{.}}'>{{.}}</option>
							{{/learningLevels}}
							</select>
							{{{text.STR_END_LEVEL}}}
							<select class="form-control" disabled={{employeeLiData.isRelevant ? "" : "disabled"}} value="{{employeeLiData.end}}">
							{{#learningLevels}}
								<option value='{{.}}'>{{.}}</option>
							{{/learningLevels}}
							</select>
					   	</li>
					{{/learningIndicators}}
				</ul>
    		</div>
  		</div>

	{{/bcnList}}

		</div>
	</div>
	<div class="modal-footer">
	    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
		<button class="btn btn-primary ladda-button" data-style="zoom-out"  on-click="saveSetLI"><span class="ladda-label">Save</span></button>
	</div>

</script>

<script id="deleteEmployeeTemplate" type="text/ractive">
	<div class="modal-body">
		<div class="alert alert-danger fade in" id="alertInModal">
			<h4>{{{text.STR_DO_YOU_WANT_TO_DELETE_EMPLOYEE}}}</h4>
		</div>
		<div class="modal-footer">
			<button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
			<button class="btn btn-danger ladda-button" data-style="zoom-out" on-click="deleteEmployee"><span class="ladda-label">Delete</span></button>
		</div>
	</div>
</script>


<!-- Modals -->

<div class="modal fade" id="updateEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content" id="containerEmployeeEdit">
				<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
				<h4 class="modal-title" id="myModalLabel">{{{text.STR_VIEW/UPDATE_EMPLOYEE}}}</h4>
				</div>
		</div><!-- /.modal-content -->
	</div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="modal fade" id="addEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content" id="containerEmployeeAdd">
				<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
				<h4 class="modal-title" id="myModalLabel">{{{text.STR_ADD_NEW_EMPLOYEE}}}</h4>
				</div>
		</div><!-- /.modal-content -->
	</div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="modal fade" id="setLIModal" tabindex="-1" role="dialog" aria-labelledby="setLIModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content" id="containerEmployeeSetLI">
		</div>
	</div>
</div>

<div class="modal fade" id="deleteEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content" id="containerEmployeeDelete">
		</div>
	</div>
</div>

<!-- Help Modal -->

	<div class="modal fade" id="descriptionModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
      <div class="modal-dialog">
       <script id="templateHelpModal" type="text/ractive">
	        <div class="modal-content">
	          <div class="modal-header">
	          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
	    		<h4 class="modal-title">{{{text.STR_BUSINESS_EMPLOYEES_HELP}}}</h4>
	            </div>
	          <div class="modal-body">
	            <div class="panel-group" id="levelsdef" align="justify">
	             {{#(accessRights.isManager && !accessRights.isEmployee)}}
		             <ul style="padding: 10px;">
		             	<p>{{{text.STR_IN_THE_BUSINESS_EMPLOYEES_WIDGET}}}</p>
			             <li>{{{text.STR_TO_SEE_MORE_OPTIONS_CLICK_ON}}}</li>
			           <ul style="padding: 10px;">
				             <li>{{{text.STR_TO_ASSIGN_GOALS_TO_EMPLOYEE_AND}}}</li>
					         <li>{{{text.STR_CHECK_IN_RELEVANT_LEARNING_INDICATORS}}}</li>
					         <li>{{{text.STR_CHOOSE_START_AND_END_DATES_FOR}}}
					             <br><strong>{{{text.STR_DESCRIPTIONS_OF_LEARNING_LEVELS}}}</strong>
					              	<ul style="padding: 10px;">
					                	{{{text.STR_LEVEL_0_I_HAVE_NOT_STARTED_TO}}}
					              	</ul>
				              </li>
				             <li>{{{text.STR_TO_MONITOR_THE_LEARNING_EMPLOYEE}}}</li>
				       		 <li>{{{text.STR_TO_SEND_EMAIL_TO_THE_EMPLOYEES}}}</li>

				       </ul>
		             </ul>
	              {{/(accessRights.isManager && !accessRights.isEmployee)}}
	               {{#accessRights.isEmployee}}
					    <p>{{{text.STR_IN_THIS_WIDGET_YOU_CAN_SEE_YOUR}}}</p>
					{{/accessRights.isEmployee}}
	          </div>
	          <div class="modal-footer">
	                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
	          </div>
	        </div>
        </script>
      </div>
    </div>
	]]>
  </Content>
</Module>

